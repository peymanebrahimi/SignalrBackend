version: '3.4'

services:
  chatapp:
    image: ${DOCKER_REGISTRY-}chatapp
    container_name: chatapp
    build:
      context: .
      dockerfile: ChatApp/Dockerfile
    ports:
      - "8080:80"
      - "8081:443"
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT="development"
      - MONGODB_CN
      - Sql_CN
    networks:
     - signalr-app-network
    depends_on:
      - mongo
      - sqldb

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27016:27017"
    volumes:
      - "mongovol:/data/db"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${Mongodb_User}"
      MONGO_INITDB_ROOT_PASSWORD: "${Mongodb_Pw}"
    networks:
      - signalr-app-network

  sqldb:
    image: mcr.microsoft.com/mssql/server
    container_name: sqldb
    ports:
      - "1402:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    restart: always
    environment:
      SA_PASSWORD: "${SqlDb_Pw}"
      ACCEPT_EULA: "Y"
    networks:
     - signalr-app-network

  chatseq:
    image: datalust/seq
    container_name: chatseq
    ports:
      - "9090:80"
      - "5040:5341"
    volumes:
      - "chatseqvol:/data"
    restart: always
    environment:
      ACCEPT_EULA: "Y"
    networks:
      - signalr-app-network

networks:
  signalr-app-network:
    driver: bridge

volumes:
  mongovol:
  sqlvolume:
  chatseqvol: